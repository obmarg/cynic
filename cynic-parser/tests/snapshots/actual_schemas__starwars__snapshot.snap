---
source: cynic-parser/tests/actual_schemas.rs
expression: parsed.to_sdl()
---
schema {
  query: Root
}

type Root {
  allFilms(after: String
    first: Int
    before: String
    last: Int
  ): FilmsConnection
  film(id: ID, filmID: ID): Film
  allPeople(after: String
    first: Int
    before: String
    last: Int
  ): PeopleConnection
  person(id: ID, personID: ID): Person
  allPlanets(after: String
    first: Int
    before: String
    last: Int
  ): PlanetsConnection
  planet(id: ID, planetID: ID): Planet
  allSpecies(after: String
    first: Int
    before: String
    last: Int
  ): SpeciesConnection
  species(id: ID, speciesID: ID): Species
  allStarships(after: String
    first: Int
    before: String
    last: Int
  ): StarshipsConnection
  starship(id: ID, starshipID: ID): Starship
  allVehicles(after: String
    first: Int
    before: String
    last: Int
  ): VehiclesConnection
  vehicle(id: ID, vehicleID: ID): Vehicle
  node(
    """
    The ID of an object
    """
    id: ID!
  ): Node
}

"""
A connection to a list of items.
"""
type FilmsConnection {
  pageInfo: PageInfo!
  edges: [FilmsEdge]
  totalCount: Int
  films: [Film]
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

"""
An edge in a connection.
"""
type FilmsEdge {
  node: Film
  cursor: String!
}

"""
A single film.
"""
type Film implements Node {
  title: String
  episodeID: Int
  openingCrawl: String
  director: String
  producers: [String]
  releaseDate: String
  speciesConnection(after: String
    first: Int
    before: String
    last: Int
  ): FilmSpeciesConnection
  starshipConnection(after: String
    first: Int
    before: String
    last: Int
  ): FilmStarshipsConnection
  vehicleConnection(after: String
    first: Int
    before: String
    last: Int
  ): FilmVehiclesConnection
  characterConnection(after: String
    first: Int
    before: String
    last: Int
  ): FilmCharactersConnection
  planetConnection(after: String
    first: Int
    before: String
    last: Int
  ): FilmPlanetsConnection
  created: String
  edited: String
  id: ID!
}

"""
An object with an ID
"""
interface Node {
  id: ID!
}

"""
A connection to a list of items.
"""
type FilmSpeciesConnection {
  pageInfo: PageInfo!
  edges: [FilmSpeciesEdge]
  totalCount: Int
  species: [Species]
}

"""
An edge in a connection.
"""
type FilmSpeciesEdge {
  node: Species
  cursor: String!
}

"""
A type of person or character within the Star Wars Universe.
"""
type Species implements Node {
  name: String
  classification: String
  designation: String
  averageHeight: Float
  averageLifespan: Int
  eyeColors: [String]
  hairColors: [String]
  skinColors: [String]
  language: String
  homeworld: Planet
  personConnection(after: String
    first: Int
    before: String
    last: Int
  ): SpeciesPeopleConnection
  filmConnection(after: String
    first: Int
    before: String
    last: Int
  ): SpeciesFilmsConnection
  created: String
  edited: String
  id: ID!
}

"""
A large mass, planet or planetoid in the Star Wars Universe, at the time of
0 ABY.
"""
type Planet implements Node {
  name: String
  diameter: Int
  rotationPeriod: Int
  orbitalPeriod: Int
  gravity: String
  population: Float
  climates: [String]
  terrains: [String]
  surfaceWater: Float
  residentConnection(after: String
    first: Int
    before: String
    last: Int
  ): PlanetResidentsConnection
  filmConnection(after: String
    first: Int
    before: String
    last: Int
  ): PlanetFilmsConnection
  created: String
  edited: String
  id: ID!
}

"""
A connection to a list of items.
"""
type PlanetResidentsConnection {
  pageInfo: PageInfo!
  edges: [PlanetResidentsEdge]
  totalCount: Int
  residents: [Person]
}

"""
An edge in a connection.
"""
type PlanetResidentsEdge {
  node: Person
  cursor: String!
}

"""
An individual person or character within the Star Wars universe.
"""
type Person implements Node {
  name: String
  birthYear: String
  eyeColor: String
  gender: String
  hairColor: String
  height: Int
  mass: Float
  skinColor: String
  homeworld: Planet
  filmConnection(after: String
    first: Int
    before: String
    last: Int
  ): PersonFilmsConnection
  species: Species
  starshipConnection(after: String
    first: Int
    before: String
    last: Int
  ): PersonStarshipsConnection
  vehicleConnection(after: String
    first: Int
    before: String
    last: Int
  ): PersonVehiclesConnection
  created: String
  edited: String
  id: ID!
}

"""
A connection to a list of items.
"""
type PersonFilmsConnection {
  pageInfo: PageInfo!
  edges: [PersonFilmsEdge]
  totalCount: Int
  films: [Film]
}

"""
An edge in a connection.
"""
type PersonFilmsEdge {
  node: Film
  cursor: String!
}

"""
A connection to a list of items.
"""
type PersonStarshipsConnection {
  pageInfo: PageInfo!
  edges: [PersonStarshipsEdge]
  totalCount: Int
  starships: [Starship]
}

"""
An edge in a connection.
"""
type PersonStarshipsEdge {
  node: Starship
  cursor: String!
}

"""
A single transport craft that has hyperdrive capability.
"""
type Starship implements Node {
  name: String
  model: String
  starshipClass: String
  manufacturers: [String]
  costInCredits: Float
  length: Float
  crew: String
  passengers: String
  maxAtmospheringSpeed: Int
  hyperdriveRating: Float
  MGLT: Int
  cargoCapacity: Float
  consumables: String
  pilotConnection(after: String
    first: Int
    before: String
    last: Int
  ): StarshipPilotsConnection
  filmConnection(after: String
    first: Int
    before: String
    last: Int
  ): StarshipFilmsConnection
  created: String
  edited: String
  id: ID!
}

"""
A connection to a list of items.
"""
type StarshipPilotsConnection {
  pageInfo: PageInfo!
  edges: [StarshipPilotsEdge]
  totalCount: Int
  pilots: [Person]
}

"""
An edge in a connection.
"""
type StarshipPilotsEdge {
  node: Person
  cursor: String!
}

"""
A connection to a list of items.
"""
type StarshipFilmsConnection {
  pageInfo: PageInfo!
  edges: [StarshipFilmsEdge]
  totalCount: Int
  films: [Film]
}

"""
An edge in a connection.
"""
type StarshipFilmsEdge {
  node: Film
  cursor: String!
}

"""
A connection to a list of items.
"""
type PersonVehiclesConnection {
  pageInfo: PageInfo!
  edges: [PersonVehiclesEdge]
  totalCount: Int
  vehicles: [Vehicle]
}

"""
An edge in a connection.
"""
type PersonVehiclesEdge {
  node: Vehicle
  cursor: String!
}

"""
A single transport craft that does not have hyperdrive capability
"""
type Vehicle implements Node {
  name: String
  model: String
  vehicleClass: String
  manufacturers: [String]
  costInCredits: Float
  length: Float
  crew: String
  passengers: String
  maxAtmospheringSpeed: Int
  cargoCapacity: Float
  consumables: String
  pilotConnection(after: String
    first: Int
    before: String
    last: Int
  ): VehiclePilotsConnection
  filmConnection(after: String
    first: Int
    before: String
    last: Int
  ): VehicleFilmsConnection
  created: String
  edited: String
  id: ID!
}

"""
A connection to a list of items.
"""
type VehiclePilotsConnection {
  pageInfo: PageInfo!
  edges: [VehiclePilotsEdge]
  totalCount: Int
  pilots: [Person]
}

"""
An edge in a connection.
"""
type VehiclePilotsEdge {
  node: Person
  cursor: String!
}

"""
A connection to a list of items.
"""
type VehicleFilmsConnection {
  pageInfo: PageInfo!
  edges: [VehicleFilmsEdge]
  totalCount: Int
  films: [Film]
}

"""
An edge in a connection.
"""
type VehicleFilmsEdge {
  node: Film
  cursor: String!
}

"""
A connection to a list of items.
"""
type PlanetFilmsConnection {
  pageInfo: PageInfo!
  edges: [PlanetFilmsEdge]
  totalCount: Int
  films: [Film]
}

"""
An edge in a connection.
"""
type PlanetFilmsEdge {
  node: Film
  cursor: String!
}

"""
A connection to a list of items.
"""
type SpeciesPeopleConnection {
  pageInfo: PageInfo!
  edges: [SpeciesPeopleEdge]
  totalCount: Int
  people: [Person]
}

"""
An edge in a connection.
"""
type SpeciesPeopleEdge {
  node: Person
  cursor: String!
}

"""
A connection to a list of items.
"""
type SpeciesFilmsConnection {
  pageInfo: PageInfo!
  edges: [SpeciesFilmsEdge]
  totalCount: Int
  films: [Film]
}

"""
An edge in a connection.
"""
type SpeciesFilmsEdge {
  node: Film
  cursor: String!
}

"""
A connection to a list of items.
"""
type FilmStarshipsConnection {
  pageInfo: PageInfo!
  edges: [FilmStarshipsEdge]
  totalCount: Int
  starships: [Starship]
}

"""
An edge in a connection.
"""
type FilmStarshipsEdge {
  node: Starship
  cursor: String!
}

"""
A connection to a list of items.
"""
type FilmVehiclesConnection {
  pageInfo: PageInfo!
  edges: [FilmVehiclesEdge]
  totalCount: Int
  vehicles: [Vehicle]
}

"""
An edge in a connection.
"""
type FilmVehiclesEdge {
  node: Vehicle
  cursor: String!
}

"""
A connection to a list of items.
"""
type FilmCharactersConnection {
  pageInfo: PageInfo!
  edges: [FilmCharactersEdge]
  totalCount: Int
  characters: [Person]
}

"""
An edge in a connection.
"""
type FilmCharactersEdge {
  node: Person
  cursor: String!
}

"""
A connection to a list of items.
"""
type FilmPlanetsConnection {
  pageInfo: PageInfo!
  edges: [FilmPlanetsEdge]
  totalCount: Int
  planets: [Planet]
}

"""
An edge in a connection.
"""
type FilmPlanetsEdge {
  node: Planet
  cursor: String!
}

"""
A connection to a list of items.
"""
type PeopleConnection {
  pageInfo: PageInfo!
  edges: [PeopleEdge]
  totalCount: Int
  people: [Person]
}

"""
An edge in a connection.
"""
type PeopleEdge {
  node: Person
  cursor: String!
}

"""
A connection to a list of items.
"""
type PlanetsConnection {
  pageInfo: PageInfo!
  edges: [PlanetsEdge]
  totalCount: Int
  planets: [Planet]
}

"""
An edge in a connection.
"""
type PlanetsEdge {
  node: Planet
  cursor: String!
}

"""
A connection to a list of items.
"""
type SpeciesConnection {
  pageInfo: PageInfo!
  edges: [SpeciesEdge]
  totalCount: Int
  species: [Species]
}

"""
An edge in a connection.
"""
type SpeciesEdge {
  node: Species
  cursor: String!
}

"""
A connection to a list of items.
"""
type StarshipsConnection {
  pageInfo: PageInfo!
  edges: [StarshipsEdge]
  totalCount: Int
  starships: [Starship]
}

"""
An edge in a connection.
"""
type StarshipsEdge {
  node: Starship
  cursor: String!
}

"""
A connection to a list of items.
"""
type VehiclesConnection {
  pageInfo: PageInfo!
  edges: [VehiclesEdge]
  totalCount: Int
  vehicles: [Vehicle]
}

"""
An edge in a connection.
"""
type VehiclesEdge {
  node: Vehicle
  cursor: String!
}

