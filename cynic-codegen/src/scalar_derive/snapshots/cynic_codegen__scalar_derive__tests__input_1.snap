---
source: cynic-codegen/src/scalar_derive_2/tests.rs
expression: "format_code(format!(\"{}\", tokens))"

---
#[automatically_derived]
impl<'de> ::cynic::core::Scalar<'de> for DateTime {}
#[automatically_derived]
impl ::cynic::serde::Serialize for DateTime {
    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>
    where
        S: ::cynic::serde::Serializer,
    {
        self.0.serialize(serializer)
    }
}
#[automatically_derived]
impl<'de> ::cynic::serde::Deserialize<'de> for DateTime {
    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>
    where
        D: ::cynic::serde::Deserializer<'de>,
    {
        String::deserialize(deserializer).map(Self)
    }
}
#[automatically_derived]
impl ::cynic::schema::IsScalar<schema::DateTime> for DateTime {
    type SchemaType = schema::DateTime;
}

