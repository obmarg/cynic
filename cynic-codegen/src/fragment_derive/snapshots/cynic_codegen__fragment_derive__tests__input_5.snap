---
source: cynic-codegen/src/fragment_derive/tests.rs
assertion_line: 74
expression: "format_code(format!(\"{}\", tokens))"

---
#[automatically_derived]
impl<'de> ::cynic::core::QueryFragment<'de> for Film {
    type SchemaType = schema::Film;
    type Variables = ();
    const TYPE: Option<&'static str> = Some("Film");
    fn query(mut builder: ::cynic::queries::QueryBuilder<Self::SchemaType, Self::Variables>) {
        #![allow(unused_mut)]
        <FilmDetails as ::cynic::core::QueryFragment>::query(builder)
    }
}
#[automatically_derived]
impl<'de> ::cynic::serde::Deserialize<'de> for Film {
    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>
    where
        D: ::cynic::serde::Deserializer<'de>,
    {
        let spreadable = ::cynic::__private::Spreadable::deserialize(deserializer)?;
        Ok(Film {
            details: <FilmDetails as ::cynic::serde::Deserialize<'de>>::deserialize(
                spreadable.spread_deserializer(),
            )?,
        })
    }
}

