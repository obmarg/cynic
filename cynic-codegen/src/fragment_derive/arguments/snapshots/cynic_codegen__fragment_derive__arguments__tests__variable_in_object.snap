---
source: cynic-codegen/src/fragment_derive/arguments/tests.rs
expression: "analyse_field_arguments(&schema, literals, field,\nSome(&format_ident!(\"MyArguments\").into()),\nSpan::call_site()).map(|o| o.arguments)"
snapshot_kind: text
---
Ok(
    [
        Field {
            schema_field: InputValue {
                name: FieldName {
                    graphql_name: "filters",
                },
                value_type: NamedInputType(
                    "BookFilters",
                ),
                has_default: false,
            },
            value: Object(
                Object {
                    schema_obj: InputObjectType {
                        name: "BookFilters",
                        fields: [
                            InputValue {
                                name: FieldName {
                                    graphql_name: "authors",
                                },
                                value_type: NullableType(
                                    ListType(
                                        NamedInputType(
                                            "String",
                                        ),
                                    ),
                                ),
                                has_default: false,
                            },
                            InputValue {
                                name: FieldName {
                                    graphql_name: "state",
                                },
                                value_type: NullableType(
                                    NamedInputType(
                                        "BookState",
                                    ),
                                ),
                                has_default: false,
                            },
                        ],
                        is_one_of: false,
                    },
                    fields: [
                        Field {
                            schema_field: InputValue {
                                name: FieldName {
                                    graphql_name: "state",
                                },
                                value_type: NullableType(
                                    NamedInputType(
                                        "BookState",
                                    ),
                                ),
                                has_default: false,
                            },
                            value: Variable(
                                Variable {
                                    ident: Ident(
                                        aVariable,
                                    ),
                                    value_type: NullableType(
                                        NamedInputType(
                                            "BookState",
                                        ),
                                    ),
                                    variables_fields_struct: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    MyArguments,
                                                ),
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                            requires_feature: None,
                        },
                    ],
                },
            ),
            requires_feature: None,
        },
    ],
)
