---
source: cynic-querygen/tests/github-tests.rs
assertion_line: 25
expression: "document_to_fragment_structs(query, schema,\n        &QueryGenOptions::default()).expect(\"QueryGen Failed\")"
---
#[cynic::schema_for_derives(
    file = r#"schema.graphql"#,
    module = "schema",
)]
mod queries {
    use super::schema;

    #[derive(cynic::QueryVariables, Debug)]
    pub struct CommentOnMutationSupportIssueVariables {
        pub comment_body: String,
    }

    #[derive(cynic::QueryFragment, Debug)]
    #[cynic(graphql_type = "Mutation", variables = "CommentOnMutationSupportIssueVariables")]
    pub struct CommentOnMutationSupportIssue {
        #[arguments(input: { body: $comment_body, subjectId: "MDU6SXNzdWU2ODU4NzUxMzQ=" })]
        pub add_comment: Option<AddCommentPayload>,
    }

    #[derive(cynic::QueryFragment, Debug)]
    pub struct AddCommentPayload {
        pub comment_edge: Option<IssueCommentEdge>,
    }

    #[derive(cynic::QueryFragment, Debug)]
    pub struct IssueCommentEdge {
        pub node: Option<IssueComment>,
    }

    #[derive(cynic::QueryFragment, Debug)]
    pub struct IssueComment {
        pub id: cynic::Id,
    }

}

mod schema {
    cynic::use_schema!(r#"schema.graphql"#);
}


