---
source: cynic-querygen/tests/starwars-tests.rs
expression: "document_to_fragment_structs(query, schema,\n        &QueryGenOptions::default()).expect(\"QueryGen Failed\")"
---
#[derive(cynic::QueryVariables, Debug)]
pub struct NestedArgsQueryVariables<'a> {
    pub film_id: &'a cynic::Id,
    pub planet_cursor: Option<&'a str>,
    pub resident_connection: Option<&'a str>,
}

#[derive(cynic::QueryFragment, Debug)]
#[cynic(graphql_type = "Root", variables = "NestedArgsQueryVariables")]
pub struct NestedArgsQuery {
    #[arguments(id: $film_id)]
    pub film: Option<Film>,
}

#[derive(cynic::QueryFragment, Debug)]
#[cynic(variables = "NestedArgsQueryVariables")]
pub struct Film {
    pub title: Option<String>,
    pub director: Option<String>,
    #[arguments(after: $planet_cursor)]
    pub planet_connection: Option<FilmPlanetsConnection>,
}

#[derive(cynic::QueryFragment, Debug)]
#[cynic(variables = "NestedArgsQueryVariables")]
pub struct FilmPlanetsConnection {
    pub planets: Option<Vec<Option<Planet>>>,
}

#[derive(cynic::QueryFragment, Debug)]
#[cynic(variables = "NestedArgsQueryVariables")]
pub struct Planet {
    #[arguments(after: $resident_connection)]
    pub resident_connection: Option<PlanetResidentsConnection>,
}

#[derive(cynic::QueryFragment, Debug)]
pub struct PlanetResidentsConnection {
    pub residents: Option<Vec<Option<Person>>>,
}

#[derive(cynic::QueryFragment, Debug)]
pub struct Person {
    pub name: Option<String>,
}

#[cynic::schema]
mod schema {}

