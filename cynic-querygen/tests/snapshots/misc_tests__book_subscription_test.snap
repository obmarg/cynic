---
source: cynic-querygen/tests/misc-tests.rs
assertion_line: 21
expression: "document_to_fragment_structs(query, schema,\n                             &QueryGenOptions::default()).expect(\"QueryGen Failed\")"

---
#[cynic::schema_for_derives(
    file = r#"schema.graphql"#,
    module = "schema",
)]
mod queries {
    use super::schema;

    #[derive(cynic::QueryFragment, Debug)]
    #[cynic(graphql_type = "SubscriptionRoot")]
    pub struct BookSubscription {
        #[arguments(mutationType: "CREATED")]
        pub books: BookChanged,
    }

    #[derive(cynic::QueryFragment, Debug)]
    pub struct BookChanged {
        pub mutation_type: MutationType,
        pub id: cynic::Id,
        pub book: Option<Book>,
    }

    #[derive(cynic::QueryFragment, Debug)]
    pub struct Book {
        pub id: String,
        pub name: String,
        pub author: String,
    }

    #[derive(cynic::Enum, Clone, Copy, Debug)]
    pub enum MutationType {
        Created,
        Deleted,
    }

}

mod schema {
    cynic::use_schema!(r#"schema.graphql"#);
}


