---
source: cynic-querygen/tests/github-tests.rs
expression: "document_to_fragment_structs(query, schema,\n        &QueryGenOptions::default()).expect(\"QueryGen Failed\")"
---
#[cynic::schema_for_derives(
    file = r#"schema.graphql"#,
    module = "schema",
)]
mod queries {
    use super::schema;

    #[derive(cynic::QueryFragment, Debug)]
    #[cynic(graphql_type = "Query")]
    pub struct FieldOnInterface {
        #[arguments(owner: "obmarg", name: "cynic")]
        pub repository: Option<Repository>,
    }

    #[derive(cynic::QueryFragment, Debug)]
    pub struct Repository {
        #[arguments(first: 1)]
        pub issues: IssueConnection,
    }

    #[derive(cynic::QueryFragment, Debug)]
    pub struct IssueConnection {
        pub edges: Option<Vec<Option<IssueEdge>>>,
    }

    #[derive(cynic::QueryFragment, Debug)]
    pub struct IssueEdge {
        pub node: Option<Issue>,
    }

    #[derive(cynic::QueryFragment, Debug)]
    pub struct Issue {
        pub author: Option<Actor>,
    }

    #[derive(cynic::QueryFragment, Debug)]
    pub struct Actor {
        pub login: String,
    }

}

#[allow(non_snake_case, non_camel_case_types)]
mod schema {
    cynic::use_schema!(r#"schema.graphql"#);
}


