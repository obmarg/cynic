---
source: cynic-querygen/tests/github-tests.rs
expression: "document_to_fragment_structs(query, schema,\n        &QueryGenOptions::default()).expect(\"QueryGen Failed\")"
---
#[derive(cynic::QueryVariables, Debug)]
pub struct ProjectMetadataQueryVariables<'a> {
    pub id: &'a cynic::Id,
}

#[derive(cynic::QueryFragment, Debug)]
#[cynic(graphql_type = "Query", variables = "ProjectMetadataQueryVariables")]
pub struct ProjectMetadataQuery {
    #[arguments(id: $id)]
    pub node: Option<Node>,
}

#[derive(cynic::QueryFragment, Debug)]
pub struct ProjectV2SingleSelectField {
    pub name: String,
    pub data_type: ProjectV2FieldType,
    pub options: Vec<ProjectV2SingleSelectFieldOption>,
}

#[derive(cynic::QueryFragment, Debug)]
pub struct ProjectV2SingleSelectFieldOption {
    pub id: String,
    pub name: String,
    #[cynic(rename = "nameHTML")]
    pub name_html: String,
}

#[derive(cynic::QueryFragment, Debug)]
pub struct ProjectV2IterationField {
    pub name: String,
    pub data_type: ProjectV2FieldType,
    pub configuration: ProjectV2IterationFieldConfiguration,
}

#[derive(cynic::QueryFragment, Debug)]
pub struct ProjectV2IterationFieldConfiguration {
    pub duration: i32,
    pub start_day: i32,
}

#[derive(cynic::QueryFragment, Debug)]
pub struct ProjectV2Field {
    pub name: String,
    pub data_type: ProjectV2FieldType,
}

#[derive(cynic::QueryFragment, Debug)]
pub struct ProjectV2 {
    pub id: cynic::Id,
    pub title: String,
    pub number: i32,
    pub public: bool,
    pub readme: Option<String>,
    pub short_description: Option<String>,
    pub url: Uri,
    #[arguments(first: 100)]
    pub fields: ProjectV2FieldConfigurationConnection,
}

#[derive(cynic::QueryFragment, Debug)]
pub struct ProjectV2FieldConfigurationConnection {
    pub total_count: i32,
    pub page_info: PageInfo,
    pub nodes: Option<Vec<Option<ProjectV2FieldConfiguration>>>,
}

#[derive(cynic::QueryFragment, Debug)]
pub struct PageInfo {
    pub has_next_page: bool,
    pub end_cursor: Option<String>,
    pub has_previous_page: bool,
    pub start_cursor: Option<String>,
}

#[derive(cynic::InlineFragments, Debug)]
pub enum Node {
    ProjectV2(ProjectV2),
    #[cynic(fallback)]
    Unknown
}

#[derive(cynic::InlineFragments, Debug)]
pub enum ProjectV2FieldConfiguration {
    ProjectV2SingleSelectField(ProjectV2SingleSelectField),
    ProjectV2Field(ProjectV2Field),
    ProjectV2IterationField(ProjectV2IterationField),
    #[cynic(fallback)]
    Unknown
}

#[derive(cynic::Enum, Clone, Copy, Debug)]
pub enum ProjectV2FieldType {
    Assignees,
    Date,
    Iteration,
    Labels,
    LinkedPullRequests,
    Milestone,
    Number,
    Repository,
    Reviewers,
    SingleSelect,
    Text,
    Title,
    TrackedBy,
    Tracks,
}

#[derive(cynic::Scalar, Debug, Clone)]
#[cynic(graphql_type = "URI")]
pub struct Uri(pub String);


