---
source: cynic-querygen/tests/github-tests.rs
expression: "document_to_fragment_structs(query, schema,\n        &QueryGenOptions::default()).expect(\"QueryGen Failed\")"
---
#[derive(cynic::QueryVariables, Debug)]
pub struct RepoIssuesVariables {
    pub first: i32,
}

#[derive(cynic::QueryFragment, Debug)]
#[cynic(graphql_type = "Query", variables = "RepoIssuesVariables")]
pub struct RepoIssues {
    #[arguments(owner: "obmarg", name: "cynic")]
    pub repository: Option<Repository>,
}

#[derive(cynic::QueryFragment, Debug)]
#[cynic(variables = "RepoIssuesVariables")]
pub struct Repository {
    #[arguments(number: 100)]
    #[cynic(rename = "issueOrPullRequest")]
    pub one: Option<IssueOrPullRequest>,
    #[arguments(number: 200)]
    #[cynic(rename = "issueOrPullRequest")]
    pub two: Option<IssueOrPullRequest2>,
}

#[derive(cynic::QueryFragment, Debug)]
#[cynic(variables = "RepoIssuesVariables")]
pub struct PullRequest {
    pub changed_files: i32,
    #[arguments(first: $first)]
    pub assignees: UserConnection,
}

#[derive(cynic::QueryFragment, Debug)]
#[cynic(graphql_type = "PullRequest", variables = "RepoIssuesVariables")]
pub struct PullRequest2 {
    pub body: String,
    #[arguments(first: $first)]
    pub assignees: UserConnection,
}

#[derive(cynic::QueryFragment, Debug)]
#[cynic(variables = "RepoIssuesVariables")]
pub struct Issue {
    pub closed: bool,
    #[arguments(first: $first)]
    pub assignees: UserConnection,
}

#[derive(cynic::QueryFragment, Debug)]
#[cynic(graphql_type = "Issue", variables = "RepoIssuesVariables")]
pub struct Issue2 {
    pub body: String,
    #[arguments(first: $first)]
    pub assignees: UserConnection,
}

#[derive(cynic::QueryFragment, Debug)]
pub struct UserConnection {
    pub total_count: i32,
}

#[derive(cynic::InlineFragments, Debug)]
#[cynic(variables = "RepoIssuesVariables")]
pub enum IssueOrPullRequest {
    Issue2(Issue2),
    PullRequest2(PullRequest2),
    #[cynic(fallback)]
    Unknown
}

#[derive(cynic::InlineFragments, Debug)]
#[cynic(graphql_type = "IssueOrPullRequest", variables = "RepoIssuesVariables")]
pub enum IssueOrPullRequest2 {
    Issue(Issue),
    PullRequest(PullRequest),
    #[cynic(fallback)]
    Unknown
}


