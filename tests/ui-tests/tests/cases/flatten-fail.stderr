error[E0277]: std::option::Option<Vec<std::option::Option<std::string::String>>> cannot be flattened into a Vec<i32>
 --> tests/cases/flatten-fail.rs:8:20
  |
8 |     producers_one: Vec<i32>,
  |                    ^^^ In the GraphQL schema this field has type std::option::Option<Vec<std::option::Option<std::string::String>>>.  We can't flatten that type into Vec<i32>
  |
  = help: the trait `FlattensInto<Vec<i32>>` is not implemented for `std::option::Option<Vec<std::option::Option<std::string::String>>>`
  = note: Change this fields type to be closer to std::option::Option<Vec<std::option::Option<std::string::String>>>
  = help: the following other types implement trait `FlattensInto<T>`:
            <std::option::Option<Vec<T>> as FlattensInto<Vec<T>>>
            <std::option::Option<Vec<std::option::Option<T>>> as FlattensInto<Vec<T>>>
            <std::option::Option<Vec<std::option::Option<T>>> as FlattensInto<std::option::Option<Vec<T>>>>
note: required by a bound in `SelectionBuilder::<'a, SchemaType, VariablesFields>::select_flattened_field`
 --> $WORKSPACE/cynic/src/queries/builders.rs
  |
  |     pub fn select_flattened_field<FieldMarker, Flattened, FieldType>(
  |            ---------------------- required by a bound in this associated function
...
  |         FieldType: FlattensInto<Flattened>,
  |                    ^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `SelectionBuilder::<'a, SchemaType, VariablesFields>::select_flattened_field`

error[E0277]: std::option::Option<Vec<std::option::Option<std::string::String>>> cannot be flattened into a std::option::Option<Vec<f64>>
  --> tests/cases/flatten-fail.rs:11:20
   |
11 |     producers_two: Option<Vec<f64>>,
   |                    ^^^^^^ In the GraphQL schema this field has type std::option::Option<Vec<std::option::Option<std::string::String>>>.  We can't flatten that type into std::option::Option<Vec<f64>>
   |
   = help: the trait `FlattensInto<std::option::Option<Vec<f64>>>` is not implemented for `std::option::Option<Vec<std::option::Option<std::string::String>>>`
   = note: Change this fields type to be closer to std::option::Option<Vec<std::option::Option<std::string::String>>>
   = help: the following other types implement trait `FlattensInto<T>`:
             <std::option::Option<Vec<T>> as FlattensInto<Vec<T>>>
             <std::option::Option<Vec<std::option::Option<T>>> as FlattensInto<Vec<T>>>
             <std::option::Option<Vec<std::option::Option<T>>> as FlattensInto<std::option::Option<Vec<T>>>>
note: required by a bound in `SelectionBuilder::<'a, SchemaType, VariablesFields>::select_flattened_field`
  --> $WORKSPACE/cynic/src/queries/builders.rs
   |
   |     pub fn select_flattened_field<FieldMarker, Flattened, FieldType>(
   |            ---------------------- required by a bound in this associated function
...
   |         FieldType: FlattensInto<Flattened>,
   |                    ^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `SelectionBuilder::<'a, SchemaType, VariablesFields>::select_flattened_field`

error[E0277]: i32 cannot be used for fields of type std::string::String
 --> tests/cases/flatten-fail.rs:8:20
  |
8 |     producers_one: Vec<i32>,
  |                    ^^^ The GraphQL schema expects a std::string::String here but i32 is not registered for use with fields of that type
  |
  = help: the trait `OutputScalar<'_, std::string::String>` is not implemented for `i32`, which is required by `Flattened<ScalarDeserialize<Vec<i32>, std::option::Option<Vec<std::option::Option<std::string::String>>>>>: Deserialize<'de>`
  = note: You either need to fix the type used on this field, or register i32 for use as a std::string::String
  = help: the trait `OutputScalar<'_, i32>` is implemented for `i32`
  = help: for that trait implementation, expected `i32`, found `std::string::String`
  = note: required for `std::option::Option<i32>` to implement `OutputScalar<'_, std::option::Option<std::string::String>>`
  = note: 2 redundant requirements hidden
  = note: required for `std::option::Option<Vec<std::option::Option<i32>>>` to implement `OutputScalar<'_, std::option::Option<Vec<std::option::Option<std::string::String>>>>`
  = note: required for `Flattened<ScalarDeserialize<Vec<i32>, std::option::Option<Vec<std::option::Option<std::string::String>>>>>` to implement `Deserialize<'de>`
note: required by a bound in `next_value`
 --> $CARGO/serde-1.0.210/src/de/mod.rs
  |
  |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
  |        ---------- required by a bound in this associated function
  |     where
  |         V: Deserialize<'de>,
  |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: f64 cannot be used for fields of type std::string::String
  --> tests/cases/flatten-fail.rs:11:20
   |
11 |     producers_two: Option<Vec<f64>>,
   |                    ^^^^^^ The GraphQL schema expects a std::string::String here but f64 is not registered for use with fields of that type
   |
   = help: the trait `OutputScalar<'_, std::string::String>` is not implemented for `f64`, which is required by `Flattened<ScalarDeserialize<std::option::Option<Vec<f64>>, std::option::Option<Vec<std::option::Option<std::string::String>>>>>: Deserialize<'de>`
   = note: You either need to fix the type used on this field, or register f64 for use as a std::string::String
   = help: the trait `OutputScalar<'_, f64>` is implemented for `f64`
   = help: for that trait implementation, expected `f64`, found `std::string::String`
   = note: required for `std::option::Option<f64>` to implement `OutputScalar<'_, std::option::Option<std::string::String>>`
   = note: 2 redundant requirements hidden
   = note: required for `std::option::Option<Vec<std::option::Option<f64>>>` to implement `OutputScalar<'_, std::option::Option<Vec<std::option::Option<std::string::String>>>>`
   = note: required for `Flattened<ScalarDeserialize<std::option::Option<Vec<f64>>, std::option::Option<Vec<std::option::Option<std::string::String>>>>>` to implement `Deserialize<'de>`
note: required by a bound in `next_value`
  --> $CARGO/serde-1.0.210/src/de/mod.rs
   |
   |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
   |        ---------- required by a bound in this associated function
   |     where
   |         V: Deserialize<'de>,
   |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: std::option::Option<Vec<std::option::Option<schema::FilmCharactersEdge>>> cannot be flattened into a Vec<std::string::String>
  --> tests/cases/flatten-fail.rs:19:16
   |
19 |     edges_one: Vec<String>,
   |                ^^^ In the GraphQL schema this field has type std::option::Option<Vec<std::option::Option<schema::FilmCharactersEdge>>>.  We can't flatten that type into Vec<std::string::String>
   |
   = help: the trait `FlattensInto<Vec<std::string::String>>` is not implemented for `std::option::Option<Vec<std::option::Option<schema::FilmCharactersEdge>>>`
   = note: Change this fields type to be closer to std::option::Option<Vec<std::option::Option<schema::FilmCharactersEdge>>>
   = help: the following other types implement trait `FlattensInto<T>`:
             <std::option::Option<Vec<T>> as FlattensInto<Vec<T>>>
             <std::option::Option<Vec<std::option::Option<T>>> as FlattensInto<Vec<T>>>
             <std::option::Option<Vec<std::option::Option<T>>> as FlattensInto<std::option::Option<Vec<T>>>>
note: required by a bound in `SelectionBuilder::<'a, SchemaType, VariablesFields>::select_flattened_field`
  --> $WORKSPACE/cynic/src/queries/builders.rs
   |
   |     pub fn select_flattened_field<FieldMarker, Flattened, FieldType>(
   |            ---------------------- required by a bound in this associated function
...
   |         FieldType: FlattensInto<Flattened>,
   |                    ^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `SelectionBuilder::<'a, SchemaType, VariablesFields>::select_flattened_field`
